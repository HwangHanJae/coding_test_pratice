#BFS(너비우선탐색)
#가까운 노드부터 탐색하는 알고리즘
#queue(큐) 자료형을 사용한다.
#O(N)의 복잡도가 소요
#실제 수행 시간은 DFS보다 좋은편

#BFS의 메서드 정리
from collections import deque
def bfs(graph, v, visited):
    queue = deque([v])
    #현재 노드를 방문 처리
    visited[v] = True
    #모든 큐가 True가 될때까지반복
    while queue:
      #큐에서 하나의 원소를 뽑아 출력
      v = queue.popleft()
      print(v, end=' ')
      #해당 원소와 연결된, 아직 방문하지 않은 원소들을 큐에 삽입
      for i in graph[v]:
        if visited[i] == False:
          queue.append(i)
          visited[i] = True 

    
graph = [
  [],
  [2,3,8],
  [1,7],
  [1,4,5],
  [3,5],
  [3,4],
  [7],
  [2,6,8],
  [1,7]
]

visited = [False] * len(graph)

bfs(graph, 1, visited)
